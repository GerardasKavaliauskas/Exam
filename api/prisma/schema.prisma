generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement()) @db.UnsignedInt
  email    String    @unique
  password String
  role     Int       @default(1) @db.UnsignedTinyInt
  status   Int       @default(1) @db.UnsignedTinyInt
  events   Event[]
  rates    Rate[]
  messages Message[]
}

// Skelbimai
model Event {
  id          Int        @id @default(autoincrement()) @db.UnsignedInt
  userId      Int        @db.UnsignedInt
  slug        String     @unique @db.VarChar(255)
  name        String     @db.VarChar(255)
  date        DateTime   @db.Timestamp
  place       String     @db.VarChar(225)
  description String     @db.Text
  img         String?    @db.VarChar(255)
  status      Int        @default(2) @db.UnsignedInt
  user        User       @relation(fields: [userId], references: [id])
  rates       Rate[]
  EventTag    EventTag[]
}

// Reitingai
model Rate {
  id      Int   @id @default(autoincrement()) @db.UnsignedInt
  userId  Int   @db.UnsignedInt
  rate    Int   @default(1) @db.UnsignedSmallInt
  eventId Int   @db.UnsignedInt
  user    User  @relation(fields: [userId], references: [id])
  event   Event @relation(fields: [eventId], references: [id])
}

model EventTag {
  eventId Int   @db.UnsignedInt
  tagId   Int   @db.UnsignedInt
  event   Event @relation(fields: [eventId], references: [id], onDelete: Cascade)
  tag     Tag   @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@id([eventId, tagId])
}

model Tag {
  id   Int    @id @default(autoincrement()) @db.UnsignedInt
  name String @unique @db.VarChar(50)

  EventTag EventTag[]
}

model Message {
  id      Int      @id @default(autoincrement()) @db.UnsignedInt
  postId  Int      @db.UnsignedInt
  userId  Int      @db.UnsignedInt
  body    String   @db.Text
  created DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}